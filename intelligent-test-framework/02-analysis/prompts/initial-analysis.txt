I need to conduct a comprehensive analysis of JIRA ticket ACM-22079 titled "Support digest-based upgrades via ClusterCurator for non-recommended upgrades" for the ACM QE team.

## Context
This feature enables digest-based cluster upgrades in Advanced Cluster Management (ACM) for disconnected/air-gapped environments. It's a critical customer requirement from Amadeus for reliable non-recommended upgrade paths.

## JIRA Ticket Details
- **Ticket**: ACM-22079  
- **Title**: Support digest-based upgrades via ClusterCurator for non-recommended upgrades
- **Customer**: Amadeus (Enterprise customer requiring air-gapped deployment support)
- **Priority**: High (Customer escalation)

## Pull Request Information
- **PR**: stolostron/cluster-curator-controller#468
- **Title**: "ACM-22079 Initial non-recommended image digest feature" 
- **Changes**: +400 -31 lines across 4 files
- **Files**: cmd/curator/curator.go, pkg/jobs/hive/hive.go, pkg/jobs/hive/hive_test.go, pkg/jobs/utils/helpers.go

## Key Implementation Details
1. **Enhanced validateUpgradeVersion**: Now returns both error and discovered image digest
2. **Digest Discovery Logic**: Searches conditionalUpdates first, then availableUpdates for image digests
3. **Modified retreiveAndUpdateClusterVersion**: Accepts imageWithDigest parameter
4. **Smart Force Flag**: Only uses force=true for tag-based approach, not needed with digests
5. **Backwards Compatibility**: Maintains existing behavior for recommended upgrades

## Technical Requirements
- **Force Annotation**: `cluster.open-cluster-management.io/upgrade-allow-not-recommended-versions: "true"`
- **Digest Format**: `@sha256:71e158c6173ad6aa6e356c119a87459196bbe70e89c0db1e35c1f63a87d90676`
- **Search Priority**: conditionalUpdates → availableUpdates → tag-based fallback

## Analysis Request
Please provide:

1. **Conceptual Analysis**: 
   - What problem does this solve for disconnected environments?
   - Why are digests better than tags for air-gapped deployments?
   - How does this enable non-recommended upgrade paths?

2. **Technical Deep Dive**:
   - Explain the validateUpgradeVersion function changes
   - Detail the digest discovery algorithm 
   - Describe the retreiveAndUpdateClusterVersion modifications
   - Analyze the error handling improvements

3. **ACM Integration Points**:
   - How does this work with ManagedClusterView?
   - What's the role of ManagedClusterAction?
   - How does hub-spoke communication work in disconnected scenarios?

4. **Test Case Generation**:
   - Comprehensive test scenarios for digest-based upgrades
   - Disconnected environment test cases
   - Non-recommended upgrade path tests
   - Backwards compatibility validation
   - Error handling and edge cases

5. **Implementation Recommendations**:
   - How to integrate into existing ACM QE test automation
   - Cypress E2E test scenarios
   - Test data generation for disconnected environments
   - Jenkins CI/CD pipeline considerations

## Expected Deliverables
- Complete feature understanding (conceptual and technical)
- Comprehensive test case suite ready for implementation
- ACM QE integration guidance
- Documentation suitable for team sharing

This analysis will be used to generate production-ready test automation for the ACM QE team testing ClusterCurator functionality across all ACM components.