apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-conflict-resolver
  namespace: ai-tools
  labels:
    app: ai-conflict-resolver
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-conflict-resolver
  template:
    metadata:
      labels:
        app: ai-conflict-resolver
    spec:
      serviceAccountName: ai-conflict-resolver
      containers:
      - name: ai-conflict-resolver
        image: ghcr.io/stolostron/ai-conflict-resolver:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        envFrom:
        - secretRef:
            name: ai-conflict-resolver-secrets
        - configMapRef:
            name: ai-conflict-resolver-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /usr/src/app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ai-conflict-resolver
  namespace: ai-tools
  labels:
    app: ai-conflict-resolver
spec:
  selector:
    app: ai-conflict-resolver
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ai-conflict-resolver
  namespace: ai-tools
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-conflict-resolver
  namespace: ai-tools
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ai-conflict-resolver.example.com
    secretName: ai-conflict-resolver-tls
  rules:
  - host: ai-conflict-resolver.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-conflict-resolver
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-conflict-resolver-config
  namespace: ai-tools
data:
  LOG_LEVEL: "info"
  CONFIDENCE_THRESHOLD: "85"
  CLAUDE_MODEL: "claude-3-opus-20240229"
  CLAUDE_MAX_TOKENS: "4096"
  SLACK_CHANNEL: "#conflict-resolutions"
  NOTIFY_ON_SUCCESS: "true"
  NOTIFY_ON_FAILURE: "true"
  NOTIFY_ON_LOW_CONFIDENCE: "true"
  INCLUDE_DETAILED_REPORT: "true"
  INCLUDE_ROLLBACK: "true"
