{
  "format_enforcement_service": {
    "service_name": "tg-format-enforcement-service",
    "authority_level": "BLOCKING_CRITICAL",
    "execution_phase": "real_time_validation",
    "enforcement_scope": "all_output_generation",
    "zero_tolerance_policies": [
      "citation_free_test_cases",
      "mandatory_dual_method_coverage", 
      "complete_cli_commands",
      "fixed_complete_report_structure"
    ],
    
    "citation_free_test_cases_enforcement": {
      "policy": "ZERO_CITATIONS_IN_TEST_CASES_FILE",
      "enforcement_level": "ABSOLUTE_BLOCKING",
      "validation_method": "real_time_pattern_scanning",
      "blocked_patterns": [
        "\\[Source:.*?\\]",
        "\\*\\[Source:.*?\\]\\*", 
        "\\(Source:.*?\\)",
        "\\[.*?:.*?:.*?\\]",
        "\\[Code:.*?\\]",
        "\\[GitHub:.*?\\]",
        "\\[JIRA:.*?\\]",
        "\\[Docs:.*?\\]",
        "Source:.*",
        "\\*\\[.*?\\]\\*"
      ],
      "blocking_action": "IMMEDIATE_HALT_AND_REMOVAL",
      "error_message": "Test cases file must contain ZERO citations - all citations belong in complete report only",
      "auto_correction": "remove_all_citation_patterns",
      "validation_scope": "test_cases_file_only"
    },
    
    "mandatory_dual_method_coverage": {
      "policy": "EVERY_STEP_MUST_HAVE_UI_AND_CLI_METHODS",
      "enforcement_level": "CRITICAL_BLOCKING",
      "validation_method": "table_structure_validation",
      "required_columns": [
        "Step",
        "UI Method", 
        "CLI Method",
        "Expected Results"
      ],
      "column_format_requirements": {
        "ui_method": {
          "required_prefix": ["**UI Navigation**:", "**Console Action**:", "**UI Method**:"],
          "content_requirement": "clear_console_navigation_path",
          "blocking_condition": "generic_ui_descriptions"
        },
        "cli_method": {
          "required_prefix": ["**CLI Command**:"],
          "content_requirement": "complete_executable_command_with_full_yaml",
          "blocking_condition": "truncated_commands_or_incomplete_yaml"
        },
        "expected_results": {
          "required_prefix": ["**Output**:", "**Status**:", "**Result**:"],
          "content_requirement": "specific_realistic_results_with_samples",
          "blocking_condition": "generic_success_descriptions"
        }
      },
      "blocking_action": "HALT_UNTIL_DUAL_METHODS_PROVIDED",
      "error_message": "Every test step must include both UI navigation and complete CLI command",
      "validation_triggers": ["step_addition", "table_modification", "method_generation"]
    },
    
    "complete_cli_commands_enforcement": {
      "policy": "ALL_CLI_COMMANDS_MUST_BE_COMPLETE_AND_EXECUTABLE",
      "enforcement_level": "CRITICAL_BLOCKING",
      "validation_method": "command_completeness_analysis",
      "command_requirements": {
        "yaml_manifests": {
          "requirement": "complete_yaml_from_apiVersion_to_end",
          "format": "oc apply -f - <<EOF\\n[complete_yaml]\\nEOF",
          "blocking_patterns": [
            "oc apply -f - with.*",
            "\\.\\.\\.",
            "etc\\.",
            "truncated",
            "see_above"
          ],
          "mandatory_yaml_sections": [
            "apiVersion",
            "kind", 
            "metadata.name",
            "metadata.namespace",
            "spec"
          ]
        },
        "command_completeness": {
          "requirement": "commands_ready_for_copy_paste_execution",
          "validation_criteria": [
            "no_placeholder_without_specific_values",
            "no_truncated_commands",
            "no_generic_descriptions_instead_of_commands",
            "all_parameters_specified"
          ],
          "example_violations": [
            "oc apply -f - with ClusterCurator...",
            "Create YAML with following fields...",
            "Run command similar to..."
          ]
        }
      },
      "blocking_action": "DEMAND_COMPLETE_COMMANDS",
      "error_message": "CLI commands must be complete, copy-paste ready with full YAML manifests",
      "validation_scope": "all_cli_method_columns"
    },
    
    "fixed_complete_report_structure": {
      "policy": "COMPLETE_REPORTS_MUST_FOLLOW_EXACT_8_SECTION_TEMPLATE",
      "enforcement_level": "MANDATORY_BLOCKING",
      "validation_method": "section_order_and_content_validation",
      "mandatory_section_order": [
        "Feature Deployment Status",
        "Feature Validation Results OR Feature Validation Limitation",
        "Test Environment Status",
        "Feature Implementation Analysis", 
        "Main Test Scenarios",
        "Business Impact",
        "Quality Metrics",
        "Conclusion"
      ],
      "section_content_requirements": {
        "feature_deployment_status": {
          "mandatory_declaration": "Feature Availability: [DEPLOYED/NOT_DEPLOYED/PARTIALLY_DEPLOYED]",
          "required_subsections": [
            "Supporting Data",
            "Deployment Evidence"
          ],
          "content_validation": "explicit_deployment_status_with_evidence"
        },
        "feature_validation_results": {
          "conditional_requirement": "if_feature_deployed",
          "mandatory_declaration": "Validation Status: [PASSED/FAILED/PARTIAL]",
          "required_content": [
            "validation_tests_performed",
            "supporting_data",
            "clear_explanation"
          ]
        },
        "feature_validation_limitation": {
          "conditional_requirement": "if_feature_not_deployed",
          "mandatory_declaration": "Validation Status: NOT POSSIBLE",
          "required_explanation": "clear_statement_why_validation_not_possible"
        },
        "feature_implementation_analysis": {
          "required_content": [
            "verbal_conceptual_explanations",
            "exact_code_portions_from_pr",
            "technical_architecture_explanation"
          ],
          "code_evidence_requirement": "actual_code_portions_with_line_references"
        },
        "main_test_scenarios": {
          "requirement": "explain_each_test_case_logic_verbally",
          "format": "test_case_title_with_purpose_logic_coverage",
          "content_requirement": "detailed_reasoning_for_test_approach"
        }
      },
      "blocking_action": "HALT_UNTIL_TEMPLATE_COMPLIANCE",
      "error_message": "Complete report must follow exact 8-section template with all mandatory content",
      "validation_scope": "complete_analysis_report_only"
    }
  },
  
  "enforcement_integration": {
    "service_coordination": {
      "regression_prevention_service": {
        "integration_type": "enhanced_quality_enforcement",
        "coordination_method": "parallel_real_time_validation",
        "shared_responsibilities": [
          "html_tag_prevention",
          "citation_pattern_blocking",
          "format_compliance_monitoring"
        ]
      },
      "pattern_extension_service": {
        "integration_type": "format_compliance_validation",
        "coordination_method": "output_format_verification",
        "validation_requirements": [
          "dual_method_coverage_in_generated_tests",
          "complete_cli_commands_in_pattern_extensions",
          "clean_test_cases_without_citations"
        ]
      },
      "universal_data_integration": {
        "integration_type": "format_compliant_data_integration",
        "coordination_method": "data_presentation_standardization",
        "requirements": [
          "citation_free_expected_results_enhancement",
          "realistic_samples_without_source_attribution_in_test_cases",
          "complete_yaml_manifests_with_real_environment_data"
        ]
      }
    },
    
    "execution_workflow": {
      "real_time_validation": {
        "trigger_points": [
          "test_step_generation",
          "expected_results_creation",
          "complete_report_section_generation",
          "final_output_preparation"
        ],
        "validation_sequence": [
          "citation_pattern_scan",
          "dual_method_validation",
          "cli_command_completeness_check",
          "report_structure_validation"
        ],
        "blocking_authority": "immediate_halt_on_violation"
      },
      
      "quality_gates": {
        "test_cases_file_gate": {
          "validation": "zero_citations_zero_truncated_commands",
          "blocking_level": "CRITICAL",
          "auto_correction": "remove_citations_complete_commands"
        },
        "complete_report_gate": {
          "validation": "exact_template_structure_with_all_citations",
          "blocking_level": "MANDATORY", 
          "auto_correction": "restructure_to_template_compliance"
        }
      }
    }
  },
  
  "user_requirements_compliance": {
    "requirement_1_full_commands_yaml": {
      "user_requirement": "Framework should provide full oc commands and complete YAML manifests",
      "enforcement_implementation": "complete_cli_commands_enforcement",
      "validation_method": "yaml_manifest_completeness_validation",
      "success_criteria": "all_commands_copy_paste_ready_with_full_yaml"
    },
    
    "requirement_2_citation_separation": {
      "user_requirement": "NO citations in test cases file, comprehensive citations in complete report",
      "enforcement_implementation": "citation_free_test_cases_enforcement",
      "validation_method": "citation_pattern_detection_and_blocking",
      "success_criteria": "test_cases_file_completely_clean_complete_report_fully_cited"
    },
    
    "requirement_3_dual_method_coverage": {
      "user_requirement": "Mandatory CLI commands with UI explanations in every step",
      "enforcement_implementation": "mandatory_dual_method_coverage",
      "validation_method": "ui_cli_method_validation",
      "success_criteria": "every_step_clear_for_testers_no_deep_understanding_required"
    },
    
    "requirement_4_fixed_report_template": {
      "user_requirement": "Fixed template structure for complete analysis reports",
      "enforcement_implementation": "fixed_complete_report_structure",
      "validation_method": "section_order_and_content_validation",
      "success_criteria": "exact_8_section_template_compliance_with_deployment_status"
    }
  },
  
  "blocking_mechanisms": {
    "immediate_blocking_conditions": [
      {
        "violation": "citation_patterns_in_test_cases",
        "action": "HALT_FRAMEWORK_IMMEDIATELY",
        "resolution": "remove_all_citations_from_test_cases_file"
      },
      {
        "violation": "incomplete_cli_commands",
        "action": "BLOCK_STEP_COMPLETION",
        "resolution": "provide_complete_executable_commands_with_full_yaml"
      },
      {
        "violation": "missing_ui_or_cli_method",
        "action": "BLOCK_STEP_GENERATION",
        "resolution": "add_both_ui_navigation_and_cli_command_methods"
      },
      {
        "violation": "wrong_complete_report_structure",
        "action": "BLOCK_REPORT_DELIVERY",
        "resolution": "restructure_to_exact_8_section_template"
      }
    ],
    
    "quality_recovery_mechanisms": [
      {
        "issue": "citation_contamination",
        "recovery": "automatic_citation_removal_from_test_cases",
        "preservation": "move_citations_to_complete_report_only"
      },
      {
        "issue": "incomplete_commands",
        "recovery": "command_completion_with_full_yaml_generation",
        "enhancement": "integrate_real_environment_data_for_realistic_values"
      },
      {
        "issue": "missing_dual_methods",
        "recovery": "generate_missing_ui_or_cli_method",
        "validation": "ensure_both_methods_clear_and_executable"
      }
    ]
  }
}
