{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Test Case Structure Schema",
  "description": "JSON schema for validating test case structure based on ACM-20640 session analysis",
  "type": "object",
  "properties": {
    "test_cases": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/test_case"
      }
    }
  },
  "required": ["test_cases"],
  "definitions": {
    "test_case": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "pattern": "^Test Case \\d+[A-Z]?: .+",
          "description": "Must follow format: Test Case X: Descriptive Title"
        },
        "description": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string",
              "minLength": 100,
              "description": "Complete business context and testing purpose"
            },
            "primary_coverage": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              },
              "description": "Main components being tested"
            },
            "secondary_coverage": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Supporting/integration components"
            },
            "related_jira_tickets": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ticket": {
                    "type": "string",
                    "pattern": "^ACM-\\d+"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["CLOSED", "IN PROGRESS", "NEW", "TESTING", "RESOLVED"]
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": ["ticket", "status", "description"]
              }
            }
          },
          "required": ["content", "primary_coverage"],
          "additionalProperties": false
        },
        "setup": {
          "type": "object",
          "properties": {
            "prerequisites": {
              "type": "object",
              "properties": {
                "commands": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "$ref": "#/definitions/command_with_expected_output"
                  }
                }
              },
              "required": ["commands"]
            },
            "environment_config": {
              "type": "object",
              "properties": {
                "acm_version": {
                  "type": "string",
                  "pattern": "\\d+\\.\\d+\\+"
                },
                "managed_clusters": {
                  "type": "string"
                },
                "rbac_users": {
                  "type": "string"
                }
              },
              "required": ["acm_version", "managed_clusters", "rbac_users"]
            },
            "rbac_setup": {
              "type": "object",
              "properties": {
                "script_reference": {
                  "type": "string",
                  "pattern": "https://github\\.com/.+\\.sh$",
                  "description": "Must reference actual script from repository"
                },
                "user_creation": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": ["script_reference"]
            }
          },
          "required": ["prerequisites", "environment_config", "rbac_setup"],
          "additionalProperties": false
        },
        "test_steps": {
          "type": "object",
          "properties": {
            "table_structure": {
              "type": "object",
              "properties": {
                "columns": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["Step", "Action", "Expected Result", "Sample Commands/UI Navigation"]
                  },
                  "minItems": 4,
                  "uniqueItems": true
                }
              },
              "required": ["columns"]
            },
            "steps": {
              "type": "array",
              "minItems": 1,
              "maxItems": 10,
              "items": {
                "$ref": "#/definitions/test_step"
              }
            }
          },
          "required": ["table_structure", "steps"],
          "additionalProperties": false
        }
      },
      "required": ["title", "description", "setup", "test_steps"],
      "additionalProperties": false
    },
    "test_step": {
      "type": "object",
      "properties": {
        "step_number": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10
        },
        "action": {
          "type": "string",
          "pattern": "^What We're Doing:.*",
          "description": "Must start with conceptual explanation",
          "minLength": 50
        },
        "expected_result": {
          "type": "string",
          "not": {
            "pattern": "(?i)based on.*configuration|depending on|may vary"
          },
          "description": "No vague expectations allowed - must be specific",
          "minLength": 20
        },
        "commands": {
          "type": "object",
          "properties": {
            "cli_commands": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/command_with_expected_output"
              }
            },
            "ui_navigation": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "Navigate.*â†’"
              }
            }
          }
        }
      },
      "required": ["step_number", "action", "expected_result", "commands"],
      "additionalProperties": false
    },
    "command_with_expected_output": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "minLength": 5
        },
        "expected_output": {
          "type": "string",
          "minLength": 3
        },
        "explanation": {
          "type": "string",
          "description": "Business context for why this command is needed"
        }
      },
      "required": ["command", "expected_output"],
      "additionalProperties": false
    }
  },
  "validation_rules": {
    "forbidden_patterns": [
      {
        "pattern": "(?i)based on role configuration",
        "severity": "critical",
        "message": "Vague expectations not allowed - must specify concrete expected result"
      },
      {
        "pattern": "(?i)performance.*test|stress.*test|load.*test",
        "severity": "critical", 
        "message": "Framework only supports E2E feature testing, not performance/stress/load testing"
      },
      {
        "pattern": "https://[a-z0-9\\-\\.]+\\.(com|net|org)",
        "severity": "high",
        "message": "Test cases must use placeholders, not actual URLs"
      },
      {
        "pattern": "<br\\s*/?>|<[^>]+>",
        "severity": "medium",
        "message": "HTML tags not allowed - use plain markdown"
      }
    ],
    "required_patterns": [
      {
        "pattern": "What We're Doing:.*[Tt]esting",
        "scope": "test_steps",
        "severity": "high",
        "message": "All test steps must include 'What We're Doing:' business context explanation"
      },
      {
        "pattern": "Expected.*:.*(?:yes|no|\\w+)",
        "scope": "test_steps",
        "severity": "high", 
        "message": "Expected results must be concrete (yes/no/specific values)"
      },
      {
        "pattern": "oc login.*--insecure-skip-tls-verify.*kubeadmin",
        "scope": "login_steps",
        "severity": "medium",
        "message": "Login steps should use standardized format"
      }
    ],
    "environment_handling": {
      "test_cases_file": "placeholders_only",
      "forbidden_specifics": [
        "almng-test.dev09.red-chesterfield.com",
        "https://console-openshift-console.apps.",
        "2.14.0"
      ],
      "required_placeholders": [
        "<CLUSTER_CONSOLE_URL>",
        "<CLUSTER_CONSOLE_PASSWORD>", 
        "<TEST_CLUSTER_1>",
        "<TEST_DOMAIN>"
      ]
    },
    "business_context_requirements": {
      "feature_operations": "Testing [feature] operations to ensure [business goal] is achieved",
      "integration_testing": "Validating [component] works correctly with [related components]",
      "user_journey": "Ensuring [user type] can successfully [accomplish task]",
      "multi_cluster": "Verifying [functionality] works across hub and managed clusters",
      "error_handling": "Testing [feature] handles [error scenarios] gracefully"
    }
  }
}