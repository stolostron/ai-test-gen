# Feature-Specific Overrides: Cluster Lifecycle â€” Digest-Based Upgrades

APPLY THESE OVERRIDES TO THE MAIN TABLE-FORMAT PROMPT:

- Scope: ACM-22079-like stories (ClusterCurator digest upgrades)
- Enforce namespace: `ocm` for curator examples/commands
- Include dual CLI/UI variants per step when applicable
- Always provide sample output lines for grep/jsonpath
- Include scenarios: digest via conditionalUpdates, fallback to availableUpdates, tag+force fallback, RBAC, disconnected/mirror, concurrency (only if needed)

SIMPLIFICATION AND PRACTICALITY (CRITICAL):
 - Prefer minimal, outcome-based verification over internal controller timing.
 - Do NOT use `--watch` or timing-sensitive steps (e.g., watching ManagedClusterView creation).
 - Avoid unit-test-like internals when a direct outcome check exists.
 - Verify success by logging into the managed cluster and checking its ClusterVersion image uses a digest (contains `@sha256:`), not a tag.
 - Provide a concise sample expected output for the ClusterVersion image line.

RECOMMENDED CORE FLOW (keep concise):
 1) Create/apply ClusterCurator with the force/allow-not-recommended annotation (ns: `ocm`).
2) oc login to the target managed cluster (provide placeholder URL/creds as variables).
3) Verify on the managed cluster:
   - CLI: `oc get clusterversion version -o jsonpath='{.status.desired.image}'`
   - Expected: value contains `@sha256:` (digest present) and not `:4.x.y` tag.
   - Example expected output: `quay.io/openshift-release-dev/ocp-release@sha256:<digest>`

Do not alter the mandatory table format. Keep steps short, avoid redundant checks, and prioritize non-flaky verification.
